{"version":3,"sources":["Components/UI/Toolbar/Toolbar.module.css","Components/UI/Input/Input.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/UI/Modal/Modal.module.css","Components/UI/Button/Button.module.css","Components/CompletedTasks/CompletedTask.module.css","Components/Tasks/Tasks.module.css","hoc/auxi.js","Components/UI/Backdrop/Backdrop.js","Components/UI/Modal/Modal.js","Components/UI/Button/Button.js","Components/UI/Input/Input.js","Components/CompletedTasks/CompletedTask/CompletedTask.js","Components/CompletedTasks/CompletedTasks.js","Components/Tasks/Task/Task.js","Components/Tasks/Tasks.js","Components/UI/Toolbar/Toolbar.js","Components/Layout/Layout.js","App.js","Containers/TaskBuilder/TaskBuilder.js","reportWebVitals.js","index.js","Components/Tasks/Task/Task.module.css"],"names":["module","exports","auxi","props","children","backdrop","show","className","classes","Backdrop","onClick","clicked","modal","backDropShow","Modal","style","transform","modalShow","opacity","button","Button","Input","state","taskControl","dateControl","task","date","handleTaskChange","event","target","value","setState","handleDateChange","onBtnClick","type","placeholder","onChange","this","BtnSuccess","Component","completedTask","data","btnType","id","TaskController","Task","join","TaskData","issueDate","deadline","completedTasks","history","list","map","element","CompletedTask","length","time","has31Days","month","listOf31DayMonths","i","getRemainingDays","finish","start","split","year","days","parseInt","toString","Date","seconds","getSeconds","minutes","getMinutes","hours","getHours","startingTime","issueTime","getRemainingHour","getRemainingMinutes","interval","setInterval","now","getData","clearInterval","fontSize","onClicked","tasks","Tasks","tasksList","textAlign","marginTop","cursor","addTask","toolbar","Toolbar","HomeContainer","BtnHome","to","BtnDisable","historyCheck","exact","path","render","CompletedTasks","completedTaskList","Layout","taskList","backdropToggler","backdropState","modalOpen","modalClosed","createTaskBtnHandler","onAddTaskHandler","instance","getDate","getTime","getRemainingTime","push","onTaskDoneHandler","today","removedElement","getFullYear","getMonth","removedList","updatedData","filter","item","onHistoryCheck","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12463c05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__Wdg1I\",\"HomeContainer\":\"Toolbar_HomeContainer__28ntK\",\"BtnHome\":\"Toolbar_BtnHome__6VfcW\",\"BtnSuccess\":\"Toolbar_BtnSuccess__1cwP2\",\"BtnDisable\":\"Toolbar_BtnDisable__2ogzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1NKyO\",\"BtnSuccess\":\"Input_BtnSuccess__26Hv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2x_C4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__wqyAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1YFoo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompletedTask\":\"CompletedTask_CompletedTask__2eh4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tasks\":\"Tasks_Tasks__3SDm4\"};","\r\nconst auxi=(props)=>props.children\r\n\r\nexport default auxi;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop=(props)=>(\r\n    props.show?<div className={classes.Backdrop} onClick={props.clicked} ></div>:null\r\n)\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Auxi from '../../../hoc/auxi';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport classes from './Modal.module.css';\r\nconst modal=(props)=>(\r\n    <Auxi>\r\n    <Backdrop show={props.backDropShow} clicked={props.clicked}/>\r\n    <div  className={classes.Modal} style={{\r\n        transform:props.modalShow ? 'translateY(0)':'translateY(-100vh)',\r\n        opacity:props.modalShow?'1':'0'\r\n    }}>\r\n        {props.children}\r\n    </div>\r\n    </Auxi>\r\n);\r\n\r\nexport default modal;","import React from 'react'\r\n\r\nimport classes from './Button.module.css';\r\nconst button=(props)=>(\r\n    <button className={classes.Button} onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Button from '../Button/Button';\r\nimport classes from './Input.module.css'\r\nclass Input extends Component{\r\n    state={\r\n        taskControl:\"\",\r\n        dateControl:\"\"\r\n    }\r\n    task=null;\r\n    date=null;\r\n    handleTaskChange=(event)=>{\r\n        this.task=event.target.value;\r\n        //console.log(this.task);   \r\n        this.setState({taskControl:this.task});\r\n        //console.log(this.state.taskControl)\r\n    }\r\n    handleDateChange=(event)=>{\r\n        this.date=event.target.value;\r\n        this.setState({dateControl:this.date});\r\n        //console.log(this.date);\r\n    }\r\n    onBtnClick=()=>{\r\n        this.props.clicked(this.date,this.task);\r\n        this.setState({taskControl:''});\r\n        this.setState({dateControl:''})\r\n    }\r\n    \r\n  render(){ \r\n    \r\n    return (\r\n        <div className={classes.Input}>\r\n            <input  type='text' placeholder=\"Task\" onChange={this.handleTaskChange}  value={this.state.taskControl} />\r\n            <label>Due Date</label>\r\n            <input  onChange={this.handleDateChange} type=\"date\" value={this.state.dateControl} />\r\n            <div className={classes.BtnSuccess}>\r\n                <Button  clicked={this.onBtnClick}  >Add To list</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport classes from '../../Tasks/Task/Task.module.css'\r\nconst completedTask=(props)=>{\r\n\r\n    const task=props.data;\r\n    //console.log(task)\r\n    let btnType=null;\r\n  if(props.data.id%5 === 0){\r\n    btnType='BlueBg';\r\n  }\r\n  else if(props.data.id%4 === 0){\r\n    btnType='PinkBg';\r\n  }\r\n  else if(props.data.id%3 === 0){\r\n    btnType='NavyBlueBg';\r\n  }\r\n  else{\r\n    btnType='LightBlueBg';\r\n  }\r\n  //,classes[props.btnType]].join(' ')\r\n    return (\r\n        <div className={classes.TaskController}>  \r\n    <div className={[classes.Task,classes[btnType]].join(' ')}>\r\n        <div className={classes.TaskData} >\r\n        <span>Task : </span> {task.task}\r\n        </div>\r\n        <div>\r\n         <span>Issued : </span> {task.issueDate}\r\n        </div>\r\n        <div>\r\n         <span>Finished : </span> {task.deadline}\r\n        </div>\r\n        \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default completedTask;","import React from 'react';\r\nimport CompletedTask from './CompletedTask/CompletedTask';\r\nimport classes from './CompletedTask.module.css'\r\nconst completedTasks=(props)=>{\r\n    let history=props.list.map((element)=>{\r\n        return <CompletedTask key={element.id}  data={element}/>\r\n    });\r\n   if(history.length === 0){\r\n      history=<h1>No History Found</h1>\r\n   }\r\n    \r\n    return(\r\n        <div className={classes.CompletedTask}>\r\n        {history}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default completedTasks;","import React, { Component } from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './Task.module.css';\r\nclass Task extends Component{\r\n  state={\r\n    time: \"\"\r\n  }\r\n\r\n  has31Days=(month)=>{\r\n    let listOf31DayMonths=['1','3','5','7','8','10','12'];\r\n    for(let i=0;i<listOf31DayMonths.length;i++){\r\n      if(month === listOf31DayMonths[i])\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  getRemainingDays=(finish,start)=>{\r\n    finish=finish.split('-');\r\n    start=start.split('-')\r\n    //console.log(finish+\" \"+start)\r\n    let year=finish[0]-start[0];\r\n    let month=finish[1]-start[1];\r\n    let days=finish[2]-start[2];\r\n    if(month<0){\r\n      month=(parseInt(finish[1])+12-parseInt(start[1]));\r\n    }\r\n    if(days<0 && this.has31Days(start[1]) &&start[1]!=='2' ){\r\n      days=(finish[2]-parseInt(start[2])+31)\r\n      month-=1;\r\n    }\r\n    else if(days<0 && !this.has31Days(start[1]) &&start[1]!=='2'){\r\n      days=( parseInt(finish[2])+30-parseInt(start[2]))\r\n      month-=1;\r\n    }\r\n    else if(days<0 && start[1]==='2'){\r\n      days=(finish[2]-(parseInt(start[2])+28))\r\n      month-=1;\r\n    }\r\n    let result=null;\r\n    if(year.toString() === '0' && month.toString() ==='0' && days.toString() === '0'){\r\n      return '';\r\n    }\r\n    else if(year.toString() === '0' && month.toString() ==='0'){\r\n     // console.log(year+\":\"+month+\":\"+days)\r\n      return (parseInt(days)-1).toString()+\" Days\";\r\n    }\r\n    else if(year.toString() === '0'){\r\n      return month+\" Months \"+ (parseInt(days)-1).toString()+\" Days\";\r\n    }\r\n\r\n    //console.log(year+\" \"+month+\" \"+ (parseInt(days)-1).toString())\r\n    else{ \r\n      //console.log(\":\"+year+\":\"+month+\":\"+days)\r\n    return year+\" Years \"+month+\" Months \"+ (parseInt(days)-1).toString()+\" Days\";\r\n    }\r\n  }\r\n  getData(data){\r\n    let time=new Date();\r\n    let seconds=time.getSeconds()<10?\"0\"+59-time.getSeconds():59-time.getSeconds();\r\n    let minutes=time.getMinutes()<10?\"0\"+59-time.getMinutes():59-time.getMinutes();\r\n    let hours=time.getHours()<10?\"0\"+23-time.getHours():25-time.getHours();\r\n    time=(time.getHours()<10?\"0\"+time.getHours():time.getHours())\r\n      +\":\"+(time.getMinutes()<10?\"0\"+time.getMinutes():time.getMinutes())\r\n      +\":\"+(time.getSeconds()<10?\"0\"+59-time.getSeconds():59-time.getSeconds());\r\n    //console.log(time)\r\n    //this.props.data.issueTime='0:0';\r\n    let startingTime=this.props.data.issueTime.split(\":\");\r\n    let startingHour=startingTime[0];\r\n    \r\n    let startingMinute=startingTime[1];\r\n    let getRemainingHour=hours;\r\n    let getRemainingMinutes=minutes;\r\n    let daysLeft=this.getRemainingDays(this.props.data.deadline,this.props.data.issueDate);\r\n    //console.log(getRemainingHour+\" \"+getRemainingMinutes+\" \"+seconds)\r\n    return this.getRemainingDays(this.props.data.deadline,this.props.data.issueDate)+\" \"+ getRemainingHour+\" Hours : \"+getRemainingMinutes+\" Minutes :  \"+seconds+\" Seconds\";\r\n  }\r\n  componentDidMount() {\r\n    \r\n    let time=new Date();  \r\n    time=time.getMinutes();\r\n    this.interval = setInterval(()=>Date.now()>0? this.setState({time:this.getData(Date.now())}):null,1000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  \r\n  render(){ \r\n  let btnType=null;\r\n  if(this.props.data.id%5 === 0){\r\n    btnType='BlueBg';\r\n  }\r\n  else if(this.props.data.id%4 === 0){\r\n    btnType='PinkBg';\r\n  }\r\n  else if(this.props.data.id%3 === 0){\r\n    btnType='NavyBlueBg';\r\n  }\r\n  else{\r\n    btnType='LightBlueBg';\r\n  }\r\n  //,classes[this.props.btnType]].join(' ')\r\n    return (\r\n        <div  className={classes.TaskController}>  \r\n    <div className={[classes.Task,classes[btnType]].join(' ')}>\r\n        <div className={classes.TaskData} >\r\n        {this.props.data.task}\r\n        </div>\r\n        <div>\r\n        <span>Issue Date : </span> {this.props.data.issueDate}\r\n        </div>\r\n        <div>\r\n        <span>Due Date : </span> {this.props.data.deadline}\r\n        </div>\r\n        <div>Remaining Time </div>\r\n        <div>\r\n          <span style={{fontSize:\".8rem\"}}> {this.state.time} </span>\r\n        </div>\r\n        <div className={classes.BtnSuccess}>\r\n        <Button clicked={()=>this.props.onClicked(this.props.data.id)} >Task Done</Button>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task/Task';\r\n\r\nimport classes from './Tasks.module.css';\r\nconst tasks=(props)=>{\r\n     let list=null;\r\n     \r\n    list=<div className={classes.Tasks} >{props.tasksList.map(element => {\r\n        //console.log(element)\r\n        return <Task key={element.id} data={element} onClicked={props.clicked}/>\r\n    })}</div>\r\n  // console.log(props)\r\n    if(list.props.children.length === 0){\r\n        list=<div  style={{\r\n            textAlign:'center',\r\n            marginTop:'10px',\r\n            fontSize:'1.7rem',\r\n            cursor:'pointer'\r\n        }} onClick={props.addTask}>Add A Task</div>\r\n    } \r\n    return (\r\n        <div >\r\n        {list}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default tasks;","import React, { Fragment } from 'react';\r\nimport {BrowserRouter, Link, Route,Switch} from 'react-router-dom';\r\nimport Button from '../Button/Button';\r\nimport classes from './Toolbar.module.css';\r\nimport CompletedTasks from '../../CompletedTasks/CompletedTasks';\r\nimport Tasks from '../../Tasks/Tasks';\r\nconst toolbar=(props)=>{ \r\n    let tasks=null;\r\n    if(props.tasksList.length === 0){\r\n        tasks=<div>Add A Component</div>\r\n    }\r\n    return( <BrowserRouter>\r\n        <Fragment>\r\n    <div className={classes.Toolbar}>\r\n            <div className={classes.HomeContainer}>\r\n            <div className={classes.BtnHome}  >\r\n            <Link to=\"/\" >\r\n            <Button>Home</Button>\r\n            </Link>\r\n            </div>\r\n            </div>\r\n            <div className={classes.BtnSuccess}>\r\n            <Link  to=\"/\">\r\n            <Button clicked={props.addTask} >Create Task</Button>\r\n            </Link>\r\n            </div>\r\n            <div className={classes.BtnDisable}>\r\n        <Link to=\"/history\">\r\n            <Button  clicked={props.historyCheck}>History</Button>\r\n        </Link>\r\n            </div>\r\n            </div>\r\n            </Fragment>\r\n            <Switch>\r\n         \r\n            <Route exact path=\"/\"  render={()=><Tasks addTask={props.addTask} tasksList={props.tasksList}  clicked={props.clicked} />}/>\r\n            <Route  path=\"/history\" render={()=><CompletedTasks list={props.completedTaskList}/>}/>\r\n        </Switch>\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\nexport default toolbar;","import React, { Component } from 'react';\r\nimport Auxi from '../../hoc/auxi';\r\n\r\nimport Modal from '../UI/Modal/Modal';\r\nimport Input from '../UI/Input/Input';\r\n\r\n\r\nimport Toolbar from '../UI/Toolbar/Toolbar';\r\n\r\nclass Layout extends Component{\r\n    state={\r\n        modalShow:false,\r\n        backDropShow:false,\r\n        taskList:[],\r\n        completedTaskList:[],\r\n    }\r\n    backdropToggler=()=>{\r\n        const backdropState= this.state.backDropShow;\r\n        this.setState({backDropShow:!backdropState});\r\n    }\r\n    modalOpen=()=>{\r\n        \r\n        this.setState({modalShow:true})\r\n        this.backdropToggler();\r\n    }\r\n    modalClosed=()=>{\r\n        this.setState({modalShow:false})\r\n        this.backdropToggler();\r\n    }\r\n    createTaskBtnHandler=()=>{\r\n        this.modalOpen();\r\n       \r\n    }\r\n    getTime(){\r\n        let today=new Date();\r\n        let time=today.getHours();\r\n        ////console.log()\r\n       /*  if(time>12){\r\n            time=time-12;\r\n            time=time+\":\"+(today.getMinutes())+\" PM\";\r\n        }\r\n        else{\r\n            time=time+\":\"+(today.getMinutes())+\" AM\";\r\n        } */\r\n        time=time+\":\"+today.getMinutes();\r\n        ////console.log(time)\r\n        return time;\r\n    }\r\n    getDate(){\r\n        let today=new Date();\r\n        let date=today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n        return date;\r\n    }\r\n    getRemainingTime(time){\r\n        //console.log(time)\r\n    }\r\n    onAddTaskHandler=(date,task)=>{\r\n        this.modalClosed();\r\n        let list=this.state.taskList;\r\n        let instance={\r\n            'id':'',\r\n            task:'',\r\n            issueDate:'',\r\n            issueTime:'',\r\n            deadline:''\r\n        }\r\n        \r\n        instance.task=task;\r\n        instance.deadline=date;\r\n        instance.issueDate= this.getDate();     \r\n        instance.issueTime=this.getTime();\r\n        this.getRemainingTime(instance.issueTime);\r\n        if(this.state.taskList.length === 0){\r\n            instance.id=2;\r\n        }\r\n        else{\r\n            instance.id=(this.state.taskList[this.state.taskList.length-1].id)+1;\r\n        }\r\n        list.push(instance);\r\n       this.setState({taskList:list})\r\n    }\r\n    onTaskDoneHandler=(id)=>{\r\n        let today=new Date();\r\n        let removedElement=null;\r\n        const removedData=this.state.taskList.map((element)=>{\r\n            if(element.id === id){\r\n                element.deadline=today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n                removedElement=element;\r\n                return element;\r\n            }\r\n        })\r\n        if(removedElement === null){\r\n            return;\r\n        }\r\n        const removedList=this.state.completedTaskList;\r\n        let instance={\r\n            'id':'',\r\n            task:'',\r\n            issueDate:'',\r\n            issueTime:'',\r\n            deadline:''\r\n        }\r\n        ////console.log(removedElement)\r\n        instance.deadline=removedElement.deadline;\r\n        instance.id=removedElement.id;\r\n        instance.issueDate=removedElement.issueDate;\r\n        instance.task=removedElement.task;\r\n        removedList.push(instance);\r\n        this.setState({completedTaskList:removedList});\r\n        const updatedData=this.state.taskList.filter((item)=> item.id!== id);\r\n        this.setState({taskList:updatedData});\r\n        //console.log(this.state.completedTaskList);\r\n        //console.log(updatedData)\r\n    }\r\n    onHistoryCheck=()=>{\r\n        //console.log(this.state.completedTaskList);\r\n    }\r\n    render(){ \r\n    return (\r\n        <Auxi>\r\n        <Modal backDropShow={this.state.backDropShow} modalShow={this.state.modalShow} clicked={this.modalClosed}>\r\n            <Input clicked={this.onAddTaskHandler} />\r\n            \r\n        </Modal>\r\n            <div>\r\n            <Toolbar \r\n                tasksList={this.state.taskList} \r\n                clicked={this.onTaskDoneHandler} \r\n                completedTaskList={this.state.completedTaskList}\r\n                historyCheck={this.onHistoryCheck} \r\n                addTask={this.createTaskBtnHandler} />\r\n            </div>\r\n            \r\n        </Auxi>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Layout;","import React, { Component } from 'react'\nimport Layout from './Components/Layout/Layout';\nimport TaskBuilder from './Containers/TaskBuilder/TaskBuilder';\n\nclass App extends Component {\n  render(){ \n    return (\n      <div>\n          <Layout/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\n\r\nimport Tasks from '../../Components/Tasks/Tasks';\r\n\r\nclass TaskBuilder extends Component{\r\n    \r\n    render(){\r\n        return(\r\n           <div>\r\n                <Tasks clicked={this.createTaskBtnHandler} />\r\n           </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TaskBuilder;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskContainer\":\"Task_TaskContainer__YwW0u\",\"Task\":\"Task_Task__2iG-a\",\"TaskData\":\"Task_TaskData__2bZsw\",\"BtnSuccess\":\"Task_BtnSuccess__1KZPh\",\"BlueBg\":\"Task_BlueBg__1nzqE\",\"PinkBg\":\"Task_PinkBg__L3Wcf\",\"NavyBlueBg\":\"Task_NavyBlueBg__2ZcC7\",\"LightBlueBg\":\"Task_LightBlueBg__1U1Ik\"};"],"sourceRoot":""}